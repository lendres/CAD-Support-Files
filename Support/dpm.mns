//
//      AutoCAD menu file - C:\Custom Program Files\AutoCAD\Support\dpm.mns
//

***MENUGROUP=DPM

***POP1
**TOOLBARS
ID_dpm_toolbars         [&DPM Toolbars]
ID_electrical           [->&Electrical]
ID_all_elec_on              [*All Electrical On*]^C^Call-tb-toggle;elec;on;
ID_elec_fly_on              [Electrical Flyout - ON]^C^C-toolbar;electrical_flyout;show;
ID_elec_aux_on              [Electrical Auxiliary - ON]^C^C-toolbar;electrical_auxiliary;show;
ID_elec_fp_on               [Electrical Fire Protection - ON]^C^C-toolbar;electrical_fire_protection;show;
ID_elec_hc_on               [Electrical Health Care - ON]^C^C-toolbar;electrical_health_care;show;
ID_elec_lght_on             [Electrical Lighting - ON]^C^C-toolbar;electrical_lighting;show;
ID_elec_pwr_on              [Electrical Power - ON]^C^C-toolbar;electrical_power;show;
ID_elec_recpt_on            [Electrical Receptacles - ON]^C^C-toolbar;electrical_receptacles;show;
                            [--]
ID_all_elec_off             [*All Electrical - OFF*]^C^Call-tb-toggle;elec;off;
ID_elec_fly_off             [Electrical Flyout - OFF]^C^C-toolbar;electrical_flyout;hide;
ID_elec_aux_off             [Electrical Auxiliary - OFF]^C^C-toolbar;electrical_auxiliary;hide;
ID_elec_fp_off              [Electrical Fire Protection - OFF]^C^C-toolbar;electrical_fire_protection;hide;
ID_elec_hc_off              [Electrical Health Care - OFF]^C^C-toolbar;electrical_health_care;hide;
ID_elec_lght_off            [Electrical Lighting - OFF]^C^C-toolbar;electrical_lighting;hide;
ID_elec_pwr_off             [Electrical Power - OFF]^C^C-toolbar;electrical_power;hide;
ID_elec_recpt_off           [<-Electrical Receptacles - OFF]^C^C-toolbar;electrical_receptacles;hide;
ID_mechanical           [->&Mechanical]
ID_all_mech_on              [*All Mechanical On*]^C^Call-tb-toggle;mech;on;
ID_mech_plmb_on             [Mechnical Plumbing - ON]^C^C-toolbar;mechanical_plumbing;show;
ID_mech_hvac_on             [Mechnical HVAC - ON]^C^C-toolbar;mechanical_hvac;show;
                            [--]
ID_all_mech_off             [*All Mechanical Off*]^C^Call-tb-toggle;mech;off;
ID_mech_plmb_off            [Mechnical Plumbing - OFF]^C^C-toolbar;mechanical_plumbing;hide;
ID_mech_hvac_off            [<-Mechnical HVAC - OFF]^C^C-toolbar;mechanical_hvac;hide;
ID_general              [->&General]
ID_general_on               [General - ON]^C^C-toolbar;general;show;
ID_telco_on                 [Telecommunications - ON]^C^C-toolbar;telecommunications;show;
                            [--]
ID_general_off              [General - OFF]^C^C-toolbar;general;hide;
ID_telco_off                [<-Telecommunications- OFF]^C^C-toolbar;telecommunications;hide;

***POP2
**COMMANDS
ID_dpm_commands         [DPM &Commands]
                        [->Utilities]
ID_diaon                    [Turn on Dialog Boxes]^C^Cfiledia;1;cmddia;1;
                            [--]
ID_mainlton                 [Initiate Ltscale Maintenance]^C^Cinit-maintain-ltscale;
ID_mainltoff                [Remove Ltscale Maintenance]^C^Cremove-maintain-ltscale;
                            [--]
ID_roam                     [Initiate A2K Roaming]^C^Croam;
ID_install                  [<-Setup DPM A2K]^C^Cdpm_install;
ID_bgtoggle             [&Back Ground Toggle]^C^Cbgtoggle;
ID_bgtoggle                 [Insert XRef]^C^C-XREF;;c://temp//aab.dwg;;;;
ID_angle                    [A&ngle]^C^Cangle;
ID_specs                    [Import Specs]^C^Cspecs;
                            [--]
ID_setup                    [&Setup Drawing]^C^Csetup;
ID_clean                    [Cl&ean]^C^Cclean;
ID_zeroz                    [Move Objects to 0 Elev]^C^Czeroz;
ID_addpstyles               [Add Plot Styles]^C^Caddpstyles;
                            [--]
ID_dpm_leaders              [->&Leaders]
ID_arc_leader                   [&Arc Leader]^C^Cal;
ID_ellip_leader                 [&Eliptical Leader]^C^Cell;
ID_fast_leader                  [<-&Leader Line]^C^Cll;
                            [->Text]
ID_dpmtext                      [Dpmte&xt]^C^Cdpmtext;
ID_tomtext                      [T&o Mtext]^C^Ctomtext;
ID_laydtext                     [Autolayer Dtext]^C^Cdtext_layer;
ID_laymtext                     [<-Autolayer Mtext]^C^Cmtext_layer;
ID_lead_utils               [LE &Utilities]^C^Cddleutils;
ID_layato                   [Set Auto Layer]^C^Clayato;
                            [--]
                        [->Breaking and Trimming]
ID_br_bet_ints              [Break Between Ints]^C^Cbz;
ID_br_at_int                [Brea&k @ Int]^C^CBa;
ID_gap                      [&Gap]^C^Cgap;
ID_trg                      [<-&Trim Back]^C^Ctrimp;
ID_fchamfer             [&Fchamfer]^C^Cfchamfer;
ID_glue                 [Gl&ue]^C^Cglue;
ID_dlayer               [Delete Layer in Window]^C^Cdlayer;
                        [--]
ID_demo                 [&Demo]^C^Cdemo;
ID_copy_m               [&Copy Multiple]^C^Ccopy_mult;
ID_in                   [&Insert at Dimscale]^C^Cin;
ID_line_mid             [Line at &Mid]^C^Clinemid;
ID_pipel                [Label Piping]^C^Cpipelabel;
ID_number               [Number Text]^C^Cnumber;
                        [->&Flexable Duct]
ID_efc                      [Exist Flex Curve Duct]^C^Cefc;
ID_efl                      [Exist Flex Linear Duct]^C^Cefl;
ID_efs                      [Exist Flex S Duct]^C^Cefs;
                            [--]
ID_fc                       [Flex Curve Duct]^C^Cfc;
ID_fl                       [Flexable Linear Duct]^C^Cfl;
ID_fs                       [<-Flexable S Duct]^C^Cfs;
                        [--]
                        [->Block Tools]
ID_ablkc                    [Set A block Color to Bylayer]^C^Cset-block-color-bylayer;
ID_allblkc                  [Set ALL Block Colors to Bylayer]^C^Call-blocks-color-bylayer;
ID_nentblkc                 [Set the Color of Nested Entity to Bylayer]^C^Cset-nent-color-bylayer;
ID_rpnent                   [Remove an Entity from a Block]^C^Crip-nent;
                            [--]
ID_blksc                    [Scale Blocks]^C^Cblockscale;
ID_unmirr                   [<-Unmirror]^C^Cunmirror;
ID_ddxrmod              [Modify Multiple X-refs]^C^Cddxrmod;
ID_change8x11           [8.5x11 Change Title Block]^C^Cchange8x11;
                        [--]
                        [->&Zoom]
ID_zoom_all                 [Zoom &All]^C^Cza;
ID_zoom_extents             [&Zoom Extents]^C^Cze;
ID_zoom_lim                 [Zoom &Limits]^C^Czl;
ID_zoom_ps                  [Zoom Plot &Scale]^C^Czx;
ID_zoom_prev                [Zoom &Previous]^C^Czz;
ID_zoom_out                 [Zoom &Out]^C^C--;
ID_zoom_in                  [<-Zoom &In]^C^C*;

***TOOLBARS
**GENERAL
**TB_GENERAL
ID_General_0            [_Toolbar("General", _Right, _Hide, 0, 0, 1)]
ID_unload_tb            [_Button("Unload Title Block", "unload", "unload")]-xref;u;x_tb;
ID_reload_tb            [_Button("Reload Title Block", "reload_tb", "reload_tb")]-xref;r;x_tb;
                        [--]
ID_change8x11           [_Button("8x11 Change", "change8x11", "change8x11")]change8x11;
                        [--]
ID_ogee                 [_Button("ogee", "ogee", "ogee")]^C^C^P(setq INS_NAME "ogee" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_keyed_note_lead      [_Button("Keyed Note Leader", "keyed_note_lead", "keyed_note_lead")]^C^C^P(setq INSBLOCK "keyed_note" LEADTYPE "arrow1_lead")(princ);keyed-notes;^P
ID_keyed_note_ellip     [_Button("Keyed Note Elliptical Leader", "keyed_note_ellip", "keyed_note_ellip")]^C^C^P(setq INSBLOCK "keyed_note" LEADTYPE "ellip1_lead")(princ);keyed-notes;^P
ID_keyed_note_none      [_Button("Keyed Note", "keyed_note_none", "keyed_note_none")]^C^C^P(setq INSBLOCK "keyed_note" LEADTYPE "none")(princ);keyed-notes;^P
                        [--]
ID_ti                   [_Button("Tag ID", "ti", "ti")]^C^C^P(setq INSBLOCK "tag_id" LEADTYPE "arrow1_lead")(princ);keyed-notes;^P
ID_tie                  [_Button("Tag ID", "tie", "tie")]^C^C^P(setq INSBLOCK "tag_id" LEADTYPE "ellip1_lead")(princ);keyed-notes;^P
ID_tag_id_2             [_Button("Tag ID", "tag_id_2", "tag_id_2")]^C^C^P(setq INSBLOCK "tag_id" LEADTYPE "none")(princ);keyed-notes;^P
                        [--]
ID_demo_note            [_Button("Demo Note", "demo_note", "demo_note")]^C^C^P(setq INSBLOCK "demo_note" LEADTYPE "none")(princ);keyed-notes;^P
                        [--]
ID_equip_tag            [_Button("Equipment Tag", "equip_tag", "equip_tag")]^C^C^P(setq INSBLOCK "equip_tag" LEADTYPE "arrow1_lead")(princ);keyed-notes;^P
                        [--]
ID_circle_tag           [_Button("Circle Tag", "circle_tag", "circle_tag")]^C^C^P(setq INSBLOCK "circle_tag" LEADTYPE "none")(princ);keyed-notes;^P
                        [--]
ID_fixture_tag          [_Button("Fixture Tag", "fixture_tag", "fixture_tag")]^C^C^P(setq INSBLOCK "fixture_tag" LEADTYPE "none")(princ);keyed-notes;^P
ID_nameplatelabel       [_Button("Nameplate Label", "Nameplatelabel", "Nameplatelabel")]^C^C^P(setq INSBLOCK "Nameplatelabel" LEADTYPE "none")(princ);keyed-notes;^P
                        [--]
ID_sec_note             [_Button("Section Note", "sec_note", "sec_note")]^C^C^P(setq INS_NAME "sec_note" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P



**MECHANICAL_PLUMBING
**TB_MECHANICAL_PLUMBING
ID_Mechanical_Plumbing_0 [_Toolbar("Mechanical Plumbing", _Floating, _Hide, -213, 242, 1)]
ID_elbow_down           [_Button("Elbow Down", "elbow_down", "elbow_down")]^C^C^P(setq INS_NAME "elbow_down" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_vent                 [_Button("Elbow Up / Vent / Clean Out", "elbow_up", "elbow_up")]^C^C^P(setq INS_NAME "elbow_up" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_sann_conn            [_Button("Sanitary Connection", "san_conn", "san_conn")]^C^C^P(setq INS_NAME "san_conn" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_tee                  [_Button("Tee", "tee", "tee")]^C^C^P(setq INS_NAME "tee" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
                        [--]
ID_gate_valve           [_Button("Gate Valve", "gate_valve", "gate_valve")]^C^C^P(setq INS_NAME "gate_valve" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_check_valve          [_Button("Check Valve", "check_valve", "check_valve")]^C^C^P(setq INS_NAME "check_valve" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_back_flow_prev       [_Button("Back Flow Preventer", "back_flow_prev", "back_flow_prev")]^C^C^P(setq INS_NAME "back_flow_prev" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_straight_connect     [_Button("Straight Connection", "straight_connect", "straight_connect")]^C^C^P(setq INS_NAME "straight_connect" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_elbow_connect        [_Button("Elbow connection", "elbow_connect", "elbow_connect")]^C^C^P(setq INS_NAME "elbow_connect" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_tee_connect          [_Button("Tee Connection", "tee_connect", "tee_connect")]^C^C^P(setq INS_NAME "tee_connect" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_cap                  [_Button("Cap", "cap", "cap")]^C^C^P(setq INS_NAME "cap" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_clean_out            [_Button("Clean Out", "clean_out", "clean_out")]^C^C^P(setq INS_NAME "clean_out" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_union                [_Button("Union", "union", "union")]^C^C^P(setq INS_NAME "union" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_pipe_guide           [_Button("Pipe Guide", "pipe_guide", "pipe_guide")]^C^C^P(setq INS_NAME "pipe_guide" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_exp_joint            [_Button("Expansion Joint", "exp_joint", "exp_joint")]^C^C^P(setq INS_NAME "exp_joint" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_fire_hydrant         [_Button("Fire Hydrant", "fire_hydrant", "fire_hydrant")]^C^C^P(setq INS_NAME "fire_hydrant" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
                        [--]
ID_conn_to_exist        [_Button("Connect to Existing", "conn_to_exist", "conn_to_exist")]^C^C^P(setq INSBLOCK "conn_to_exist" LEADTYPE "arrow1_lead")(princ);keyed-notes;^P
ID_pipe_anchor          [_Button("Pipe Anchor", "pipe_anchor", "pipe_anchor")]^C^C^P(setq INS_NAME "pipe_anchor" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_manhole              [_Button("Manhole", "manhole", "manhole")]^C^C^P(setq INS_NAME "manhole" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_roof_sump            [_Button("Roof Sump", "roof_sump", "roof_sump")]^C^C^P(setq INS_NAME "roof_sump" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_open_site_drain      [_Button("Open Site Drain", "open_site_drain", "open_site_drain")]^C^C^P(setq INS_NAME "open_site_drain" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
                        [--]
ID_catch_basin          [_Button("Catch Basin", "catch_basin", "catch_basin")]^C^C^P(setq INS_NAME "catch_basin" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_siamese_conn_yard    [_Button("Siamese Connection (Yard)", "siamese_conn_yard", "siamese_conn_yard")]^C^C^P(setq INS_NAME "siamese_conn_yard" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_siamese_conn_wall    [_Button("Siamese Connection (Wall)", "siamese_conn_wall", "siamese_conn_wall")]^C^C^P(setq INS_NAME "siamese_conn_wall" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
                        [--]
ID_pipe_pitch           [_Button("Direction of Pipe Pitch", "pipe_pitch", "pipe_pitch")]^C^C^P(setq INS_NAME "pipe_pitch" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_flow_switch_mech     [_Button("Flow Switch", "flow_switch_mech", "flow_switch_mech")]^C^C^P(setq INS_NAME "flow_switch_mech" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
                        [--]
ID_needle_valve         [_Button("Needle Valve", "needle_valve", "needle_valve")]^C^C^P(setq INS_NAME "needle_valve" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_plug_valve           [_Button("Plug Valve", "plug_valve", "plug_valve")]^C^C^P(setq INS_NAME "plug_valve" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_spring_check_valve   [_Button("Check Valve (Spring)", "spring_check_valve", "spring_check_valve")]^C^C^P(setq INS_NAME "spring_check_valve" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_swinging_check_valve [_Button("Check Valve (Swing)", "swinging_check_valve", "swinging_check_valve")]^C^C^P(setq INS_NAME "swinging_check_valve" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_angle_valve          [_Button("Angle Valve", "angle_valve", "angle_valve")]^C^C^P(setq INS_NAME "angle_valve" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_butterfly_valve      [_Button("Butterfly Valve", "butterfly_valve", "butterfly_valve")]^C^C^P(setq INS_NAME "butterfly_valve" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_ball_valve           [_Button("Ball Valve", "ball_valve", "ball_valve")]^C^C^P(setq INS_NAME "ball_valve" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_globe_valve          [_Button("Globe Valve", "globe_valve", "globe_valve")]^C^C^P(setq INS_NAME "globe_valve" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
                        [--]
ID_bf_measuring_device  [_Button("Balancing and Flow Measuring Device", "bf_measuring_device", "bf_measuring_device")]^C^C^P(setq INS_NAME "bf_measuring_device" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_2_way_control_valve  [_Button("Two Way Control Valve", "two_way_control_valve", "two_way_control_valve")]^C^C^P(setq INS_NAME "2_way_control_valve" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_3_way_valve_c        [_Button("Three Way Control Valve", "three_way_valve_c", "three_way_valve_c")]^C^C^P(setq INS_NAME "3_way_valve_c" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_circ_pump            [_Button("Circulating Pump", "circ_pump", "circ_pump")]^C^C^P(setq INS_NAME "circ_pump" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_flow_arrow           [_Button("Flow Arrow", "flow_arrow", "flow_arrow")]^C^C^P(setq INS_NAME "flow_arrow" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_meter                [_Button("Meter", "meter", "meter")]^C^C^P(setq INS_NAME "meter" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
                        [--]
ID_ex_fan               [_Button("Exhaust Fan", "ex_fan", "ex_fan")]^C^C^P(setq INS_NAME "ex_fan" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_ogee                 [_Button("Ogee", "ogee", "ogee")]^C^C^P(setq INS_NAME "ogee" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
                        [--]
ID_screwandyokevalve    [_Button("Screw and Yoke Valve", "screwandyokevalve", "screwandyokevalve")]^C^C^P(setq INS_NAME "screwandyokevalve" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_sprinkler_sidewall   [_Button("Sprinkler Head (Sidewall)", "sprinkler_sidewall", "sprinkler_sidewall")]^C^C^P(setq INS_NAME "sprinkler_sidewall" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_air_conn             [_Button("Hose Bibb", "air_conn", "air_conn")]^C^C^P(setq INS_NAME "hose_bibb" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
                        [--]
ID_sprinkler_head       [_Button("Sprinkler Head", "sprinkler_head", "sprinkler_head")]^C^C^P(setq INS_NAME "sprinkler_head" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_floor_drain          [_Button("Floor Drain", "floor_drain", "floor_drain")]^C^C^P(setq INS_NAME "floor_drain" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_funnel_floor_drain   [_Button("Funnel Floor Drain", "funnel_floor_drain", "funnel_floor_drain")]^C^C^P(setq INS_NAME "funnel_floor_drain" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_floor_drain_elev     [_Button("Floor Drain (Elevation)", "floor_drain_elev", "floor_drain_elev")]^C^C^P(setq INS_NAME "floor_drain_elev" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_funnel_floor_drain_elev [_Button("Funnel Floor Drain (Elevation)", "funnel_floor_drain_elev", "funnel_floor_drain_elev")]^C^C^P(setq INS_NAME "funnel_floor_drain_elev" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P

**MECHANICAL_HVAC
**TB_MECHANICAL_HVAC
ID_Mechanical_HVAC_0    [_Toolbar("Mechanical HVAC", _Floating, _Hide, 96, 164, 1)]
ID_conn_to_exist        [_Button("Connect to Existing", "conn_to_exist", "conn_to_exist")]^C^C^P(setq INSBLOCK "conn_to_exist" LEADTYPE "arrow1_lead")(princ);keyed-notes;^P
                        [--]
ID_spinin               [_Button("Spin Fitting w/ Damper", "spinin", "spinin")]^C^C^P(setq INS_NAME "spinin" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_spinina              [_Button("Spin Fitting", "spinin2", "spinin2")]^C^C^P(setq INS_NAME "spinina" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_rectductconn         [_Button("Rectangular Duct Connection", "rectductconn", "rectductconn")]^C^C^P(setq INS_NAME "rectductconn" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_rectductconn2        [_Button("Rectangular Duct Connection", "recductconn2", "recductconn2")]^C^C^P(setq INS_NAME "rectductconn2" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_rectductconna        [_Button("Rectangular Duct Connection", "rectductconna", "rectductconna")]^C^C^P(setq INS_NAME "rectductconna" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_rectductconn2a       [_Button("Rectangular Duct Connection", "rectductconn2a", "rectductconn2a")]^C^C^P(setq INS_NAME "rectductconn2a" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
                        [--]
ID_fire_damper_ver      [_Button("Vertical Fire Damper", "fire_damper_ver", "fire_damper_ver")]^C^C^P(setq INS_NAME "fire_damper_ver" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_fire_damper_hor      [_Button("Horizontal Fire Damper", "fire_damper_hor", "fire_damper_hor")]^C^C^P(setq INS_NAME "fire_damper_hor" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_smoke_damper         [_Button("Smoke Damper", "smoke_damper", "smoke_damper")]^C^C^P(setq INS_NAME "smoke_damper" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_smoke_fire_damper    [_Button("Smoke and Fire Damper", "smoke_fire_damper", "smoke_fire_damper")]^C^C^P(setq INS_NAME "smoke_fire_damper" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
                        [--]
ID_fire_damper_ver_e    [_Button("Vertical Fire Damper - Existing", "fire_damper_ver_e", "fire_damper_ver_e")]^C^C^P(setq INS_NAME "fire_damper_ver_e" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_fire_damper_hor_e    [_Button("Horizontal Fire Damper - Existing", "fire_damper_hor_e", "fire_damper_hor_e")]^C^C^P(setq INS_NAME "fire_damper_hor_e" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_smoke_damper_e       [_Button("Smoke Damper - Existing", "smoke_damper_e", "smoke_damper_e")]^C^C^P(setq INS_NAME "smoke_damper_e" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_smoke_fire_damper_e  [_Button("Smoke and Fire Damper - Existing", "smoke_fire_damper_e", "smoke_fire_damper_e")]^C^C^P(setq INS_NAME "smoke_fire_damper_e" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
                        [--]
ID_volumedamper         [_Button("Volume Damper", "volumedamper", "volumedamper")]^C^C^P(setq INS_NAME "volumedamper" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_duct_cap             [_Button("One Line Duct Cap", "duct_cap", "duct_cap")]^C^C^P(setq INS_NAME "duct_cap" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_auto_gas_shutoff     [_Button("Automatic Gas Shut-Off Valve", "auto_gas_shutoff", "auto_gas_shutoff")]^C^C^P(setq INS_NAME "auto_gas_shutoff" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_eccentric_reducer    [_Button("Eccentric Reducer", "eccentric_reducer", "eccentric_reducer")]^C^C^P(setq INS_NAME "eccentric_reducer" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_duct_trans           [_Button("Duct Transition", "duct_trans", "duct_trans")]^C^C^P(setq INS_NAME "duct_trans" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
                        [--]
ID_flex_conn            [_Button("Flexible Connection", "flex_conn", "flex_conn")]^C^C^P(setq INS_NAME "flex_conn" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_side_diffuser_a      [_Button("Side Diffuser A", "side_diffuser_a", "side_diffuser_a")]^C^C^P(setq INS_NAME "side_diffuser_a" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_side_diffuser_b      [_Button("Side Diffuser B", "side_diffuser_b", "side_diffuser_b")]^C^C^P(setq INS_NAME "side_diffuser_b" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_24x24supply          [_Button("24 x 24 Supply", "tfbytfsupply", "tfbytfsupply")]^C^C^P(setq INS_NAME "24x24supply" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_12x12supply          [_Button("12 x 12 Supply", "twbytwsupply", "twbytwsupply")]^C^C^P(setq INS_NAME 12x12supply INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_12x24raboot          [_Button("12 x 24 Return Air Boot", "twbytfraboot", "twbytfraboot")]^C^C^P(setq INS_NAME "12x24raboot" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_24x24return          [_Button("24 x 24 Return Grill", "tfbytfreturn", "tfbytfreturn")]^C^C^P(setq INS_NAME "24x24return" INS_SCALE 1 ROT_ANG 0)(princ);ADV-INSERT;^P
ID_24x24raboot          [_Button("24 x 24 Return Air Boot", "tfbytfraboot", "tfbytfraboot")]^C^C^P(setq INS_NAME "24x24raboot" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_roof_supply          [_Button("Roof Supply", "roof_supply", "roof_supply")]^C^C^P(setq INS_NAME "roof_supply" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_roof_exhaust         [_Button("Roof Exhaust", "roof_exhaust", "roof_exhaust")]^C^C^P(setq INS_NAME "roof_exhaust" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_low_exhaust          [_Button("Low Exhaust", "low_exhaust", "low_exhaust")]^C^C^P(setq INS_NAME "low_exhaust" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_return_s_aro         [_Button("Return S Arrow", "return_s_aro", "return_s_aro")]^C^C^P(setq INS_NAME "return_s_aro" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
                        [--]
ID_cent_fan             [_Button("Centrifugal Fan", "cent_fan", "cent_fan")]^C^C^P(setq INS_NAME "cent_fan" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_ceiling_fan          [_Button("Ceiling Fan", "ceiling_fan", "ceiling_fan")]^C^C^P(setq INS_NAME "ceiling_fan" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_unit_heater          [_Button("Unit Heater", "unit_heater", "unit_heater")]^C^C^P(setq INS_NAME "unit_heater" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_thermostat           [_Button("Thermostat", "thermostat", "thermostat")]^C^C^P(setq INS_NAME "thermostat" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
                        [--]
ID_sprinkler_head       [_Button("Sprinkler Head", "sprinkler_head", "sprinkler_head")]^C^C^P(setq INS_NAME "sprinkler_head" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P

**ELECTRICAL_POWER
**TB_ELECTRICAL_POWER
ID_Electrical_Power_0   [_Toolbar("Electrical Power", _Bottom, _Hide, 0, 0, 1)]
ID_motor                [_Button("Single Phase Motor", "motor", "motor")]^C^C^P(setq INS_NAME "motor" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_motor_3p             [_Button("Three Phase Motor", "motor_3p", "motor_3p")]^C^C^P(setq INS_NAME "motor_3p" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
                        [--]
ID_disconnect2          [_Button("Disconnect Switch", "disconnect2", "disconnect2")]^C^C^P(setq INS_NAME "disconnect2" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_disconnect           [_Button("Non-Fuse Disconnect Switch", "disconnect", "disconnect")]^C^C^P(setq INS_NAME "disconnect" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_disconnect3          [_Button("Comb Magnetic Motor Starter", "disconnect3", "disconnect3")]^C^C^P(setq INS_NAME "disconnect3" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
                        [--]
ID_meter                [_Button("Meter", "meter", "meter")]^C^C^P(setq INS_NAME "meter" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_jbox2                [_Button("Junction Box", "jbox2", "jbox2")]^C^C^P(setq INS_NAME "jbox2" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
                        [--]
ID_panel                [_Button("Receptacle Panel", "panel", "panel")]^C^C^P(setq INS_NAME "panel" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_panel2               [_Button("Lighting Panel", "panel2", "panel2")]^C^C^P(setq INS_NAME "panel2" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_power_panel          [_Button("Distribution/Equipment Panel", "power_panel", "power_panel")]^C^C^P(setq INS_NAME "power_panel" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
                        [--]
ID_pbutton              [_Button("Push Button", "pbutton", "pbutton")]^C^C^P(setq INS_NAME "pbutton" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_bell                 [_Button("Bell", "bell", "bell")]^C^C^P(setq INS_NAME "bell" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_door_bell            [_Button("Door Bell", "door_bell", "door_bell")]^C^C^P(setq INS_NAME "door_bell" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
                        [--]
ID_dot                  [_Button("Conduit Down", "dot", "dot")]^C^C^P(setq INS_NAME "dot" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_elbow_up             [_Button("Conduit Up", "elbow_up", "elbow_up")]^C^C^P(setq INS_NAME "elbow_up" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
                        [--]
ID_ground_rod           [_Button("Grounding Rod", "ground_rod", "ground_rod")]^C^C^P(setq INS_NAME "ground_rod" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P

**ELECTRICAL_HEALTH_CARE
**TB_ELECTRICAL_HEALTH_CARE
ID_Electrical_Health_Care_0 [_Toolbar("Electrical Health Care", _Left, _Hide, 1, 1, 1)]
ID_n_call_light_wall    [_Button("Nurse Call Dome Light Wall", "n_call_light_wall", "n_call_light_wall")]^C^C^P(setq INS_NAME "n_call_light_wall" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_n_call_light_ceil    [_Button("Nurse Call Dome Light Ceiling", "n_call_light_ceil", "n_call_light_ceil")]^C^C^P(setq INS_NAME "n_call_light_ceil" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P

**ELECTRICAL_RECEPTACLES
**TB_ELECTRICAL_RECEPTACLES
ID_Electrical_Receptacles_0 [_Toolbar("Electrical Receptacles", _Top, _Hide, 0, 0, 1)]
ID_recpt                [_Button("Duplex Receptacle", "recpt", "recpt")]^C^C^P(setq INS_NAME "recpt" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_recpt_afc            [_Button("Duplex Receptacle Mounte AFC", "recpt_afc", "recpt_afc")]^C^C^P(setq INS_NAME "recpt_afc" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
                        [--]
ID_recpt2               [_Button("Single Receptacle", "recpt2", "recpt2")]^C^C^P(setq INS_NAME "recpt2" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
                        [--]
ID_recpt_quad           [_Button("Quad Receptacle", "quadrecpt", "quadrecpt")]^C^C^P(setq INS_NAME "recpt_quad" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_quadrecpt            [_Button("Quad Receptacle Mounted AFC", "recpt_quad_afc", "recpt_quad_afc")]^C^C^P(setq INS_NAME "recpt_quad_afc" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
                        [--]
ID_recpt_box            [_Button("Floor Mounted Recept", "recpt_box", "recpt_box")]^C^C^P(setq INS_NAME "recpt_box" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_recpt_208            [_Button("NEMA Receptacle", "recpt_208", "recpt_208")]^C^C^P(setq INS_NAME "recpt_208" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_plugstrip   [_Button("Plug Strip", "plugstrip", "plugstrip")]^C^C^P(setq INS_NAME "plugstrip" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P

**ELECTRICAL_FIRE_PROTECTION
**TB_ELECTRICAL_FIRE_PROTECTION
ID_Electrical_Fire_Protection_0 [_Toolbar("Electrical Fire Protection", _Bottom, _Hide, 2, 0, 1)]
ID_fire_signal [_Button("Horn", "fire_signal", "fire_signal")]textblocks;fire_signal;f;
ID_fire_signal2 [_Button("Horn and Strobe", "fire_signal2", "fire_signal2")]textblocks;fire_signal2;f;
ID_strobe      [_Button("Strobe", "strobe", "strobe")]textblocks;strobe;s;
               [--]
ID_fire_alarm_station [_Button("Fire Alarm Station", "fire_alarm_station", "fire_alarm_station")]^C^C^P(setq INS_NAME "fire_alarm_station" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_alarm       [_Button("Alarm", "alarm", "alarm")]^C^C^P(setq INS_NAME "alarm" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
               [--]
ID_smoke_detector_2 [_Button("Smoke Detector", "smoke_detector_2", "smoke_detector_2")]^C^C^P(setq INS_NAME "smoke_detector_2" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_dusctsmokedetect [_Button("Duct Mounted Smoke Detector", "ductsmokedetect", "ductsmokedetect")]^C^C^P(setq INS_NAME "ductsmokedetect" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
               [--]
ID_heat_detector [_Button("Heat Detector", "heat_detector", "heat_detector")]^C^C^P(setq INS_NAME "heat_detector" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_hydrogen_detect [_Button("Hydrogen Detector", "hydrogen_detect", "hydrogen_detect")]^C^C^P(setq INS_NAME "hydrogen_detect" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
               [--]
ID_firealarmcp [_Button("Fire Alarm Control Panel (FACP)", "firealarmcp", "firealarmcp")]^C^C^P(setq INS_NAME "firealarmcp" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_intelcontmod [_Button("Intelligent Control Module (ICM)", "intelcontmod", "intelcontmod")]^C^C^P(setq INS_NAME "intelcontmod" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_hssd        [_Button("High Sensitivity Smoke Detector ", "hssd", "hssd")]^C^C^P(setq INS_NAME "hssd" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_hssd_cont_unit [_Button("HSSD Control Unit", "hssd_cont_unit", "hssd_cont_unit")]^C^C^P(setq INS_NAME "hssd_cont_unit" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
               [--]
ID_tamper_switch [_Button("Tamper Switch", "tamper_switch", "tamper_switch")]^C^C^P(setq INS_NAME "tamper_switch" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_flow_switch [_Button("Flow Switch", "flow_switch", "flow_switch")]^C^C^P(setq INS_NAME "flow_switch" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
               [--]
ID_airsamplingpoint [_Button("Air Sampling Point", "airsamplingpoint", "airsamplingpoint")]^C^C^P(setq INS_NAME "airsamplingpoint" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P

**ELECTRICAL_LIGHTING
**TB_ELECTRICAL_LIGHTING
ID_Electrical_Lighting_0 [_Toolbar("Electrical Lighting", _Bottom, _Hide, 1, 0, 1)]
ID_switch      [_Button("Switch", "switch", "switch")]^C^C^P(setq INS_NAME "switch" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_dualswitch  [_Button("Dual Switch", "dualswitch", "dualswitch")]^C^C^P(setq INS_NAME "dualswitch" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_timer       [_Button("Timer", "timer", "timer")]^C^C^P(setq INS_NAME "timer" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
               [--]
ID_1x8light    [_Button("1' x 8' LIGHT", "twbyelight", "twbyelight")]^C^C^P(setq INS_NAME "1x8light" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_1x8nl       [_Button("1' x 8' Night Light", "twbyenl", "twbyenl")]^C^C^P(setq INS_NAME "1x8nl" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
               [--]
ID_1x4nl       [_Button("1' x 4' Night Light", "twbyfenlight", "twbyfenlight")]^C^C^P(setq INS_NAME "1x4nl" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_1x4light    [_Button("1' x 4' Light", "twbyfelight", "twbyfelight")]^C^C^P(setq INS_NAME "1x4light" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_1x4stripfixture [_Button("1' x 4' Strip Fixture", "twbyfestripfixture", "twbyfestripfixture")]^C^C^P(setq INS_NAME "1x4stripfixture" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_1x4stripfixture_nl [_Button("1'x4' Strip Fixture Night Light", "twbyfestripfixture_nl", "twbyfestripfixture_nl")]^C^C^P(setq INS_NAME "1x4stripfixture_nl" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
               [--]
ID_2x4light    [_Button("2' x 4' Light", "tfbyfelight", "tfbyfelight")]^C^C^P(setq INS_NAME "2x4light" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_2x4nl       [_Button("2' x 4' Night Light", "tfbyfenl", "tfbyfenl")]^C^C^P(setq INS_NAME "2x4nl" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
               [--]
ID_2x2light    [_Button("2' x 2' Light", "tfbytflight", "tfbytflight")]^C^C^P(setq INS_NAME "2x2light" INS_SCALE 1 ROT_ANG 0)(princ);ADV-INSERT;^P
ID_2x2nl       [_Button("2 x 2 Night Light", "tfbytfnl", "tfbytfnl")]^C^C^P(setq INS_NAME "2x2nl" INS_SCALE 1 ROT_ANG 0)(princ);ADV-INSERT;^P
               [--]
ID_track4ft    [_Button("4' Track Lighting Track", "track4ft", "track4ft")]^C^C^P(setq INS_NAME "track4ft" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_track2ft    [_Button("2' Track Lighting Track", "track2ft", "track2ft")]^C^C^P(setq INS_NAME "track2ft" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
               [--]
ID_wall_mnt_light [_Button("Wall Mounted Light", "wall_mnt_light", "wall_mnt_light")]^C^C^P(setq INS_NAME "wall_mnt_light" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_down_light  [_Button("Down Light", "down_light", "down_light")]^C^C^P(setq INS_NAME "down_light" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_down_light_nl [_Button("Down Light Night Light", "down_light_nl", "down_light_nl")]^C^C^P(setq INS_NAME "down_light_nl" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
               [--]
ID_exlight     [_Button("Exit Light", "exlight", "exlight")]^C^C^P(setq INS_NAME "exlight" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_exlight2    [_Button("Exit Light", "exlight2", "exlight2")]^C^C^P(setq INS_NAME "exlight2" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_ex_light_hatch [_Button("Exit Light Hatch", "ex_light_fill", "ex_light_fill")]^C^C^P(setq INS_NAME "ex_light_fill" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_ex_light_arrow [_Button("Exit Light Arrow", "ex_light_arrow", "ex_light_arrow")]^C^C^P(setq INS_NAME "ex_light_arrow" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_ex_light_arrow_2 [_Button("Exit Light Arrow", "ex_light_arrow_2", "ex_light_arrow_2")]^C^C^P(setq INS_NAME "ex_light_arrow_2" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
               [--]
ID_site_light  [_Button("Site Lighting", "site_light", "site_light")]^C^C^P(setq INS_NAME "sitelight" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_sitelighta  [_Button("Wall Mounted Site Lighting", "sitelighta", "sitelighta")]^C^C^P(setq INS_NAME "sitelighta" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
               [--]
ID_emer_light  [_Button("Emergency Light", "emer_light", "emer_light")]^C^C^P(setq INS_NAME "emer_light" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_ogee        [_Button("ogee", "ogee", "ogee")]^C^C^P(setq INS_NAME "ogee" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_wall_sconce [_Button("Wall Sconce", "wall_sconce", "wall_sconce")]^C^C^P(setq INS_NAME "wall_sconce" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P

**ELECTRICAL_AUXILIARY
**TB_ELECTRICAL_AUXILIARY
ID_Electrical_Auxiliary_0 [_Toolbar("Electrical Auxiliary", _Floating, _Show, 510, 351, 1)]
ID_telephone   [_Button("Telephone Outlet", "telephone", "telephone")]^C^C^P(setq INS_NAME "telephone" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_telephone_afc [_Button("Telephone Outlet Mounted AFC", "telephone_afc", "telephone_afc")]^C^C^P(setq INS_NAME "telephone_afc" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
               [--]
ID_data        [_Button("Data Outlet", "data", "data")]^C^C^P(setq INS_NAME "data" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
               [--]
ID_teledata    [_Button("Telephone and Data Outlet", "teledata", "teledata")]^C^C^P(setq INS_NAME "teledata" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_teledata_afc [_Button("Telephone and Data Outlet - AFC", "teledata_afc", "teledata_afc")]^C^C^P(setq INS_NAME "teledata_afc" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
//               [--]
//ID_card_reader [_Button("Card Reader", "card_reader", "card_reader")]^C^C^P(setq INS_NAME "card_reader" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV//-INSERT;^P

**ELECTRICAL_FLYOUT
**TB_ELECTRICAL_FLYOUT
ID_Electrical_Flyout_0 [_Toolbar("Electrical Flyout", _Floating, _Hide, 202, 242, 1)]
ID_elec_aux_fly [_Flyout("Electrical Auxiliary", ICON7147, ICON7147, _OtherIcon, DPM.ELECTRICAL_AUXILIARY)]
ID_elec_aux_fly [_Flyout("Electrical Auxiliary", ICON7147, ICON7147, _OtherIcon, DPM.ELECTRICAL_AUXILIARY)]
               [--]
ID_elec_fp_fly [_Flyout("Electrical Fire Protection", ICON1476, ICON1476, _OtherIcon, DPM.ELECTRICAL_FIRE_PROTECTION)]
ID_elec_fp_fly [_Flyout("Electrical Fire Protection", ICON1476, ICON1476, _OtherIcon, DPM.ELECTRICAL_FIRE_PROTECTION)]
               [--]
ID_elec_hc_fly [_Flyout("Electrical Health Care", ICON0558, ICON0558, _OtherIcon, DPM.ELECTRICAL_HEALTH_CARE)]
ID_elec_hc_fly [_Flyout("Electrical Health Care", ICON0558, ICON0558, _OtherIcon, DPM.ELECTRICAL_HEALTH_CARE)]
               [--]
ID_elec_lght_fly [_Flyout("Electrical Lighting", ICON8851, ICON8851, _OtherIcon, DPM.ELECTRICAL_LIGHTING)]
ID_elec_lght_fly [_Flyout("Electrical Lighting", ICON8851, ICON8851, _OtherIcon, DPM.ELECTRICAL_LIGHTING)]
               [--]
ID_elec_pwr_fly [_Flyout("Electrical Power", ICON2349, ICON2349, _OtherIcon, DPM.ELECTRICAL_POWER)]
ID_elec_pwr_fly [_Flyout("Electrical Power", ICON2349, ICON2349, _OtherIcon, DPM.ELECTRICAL_POWER)]
               [--]
ID_elec_recpt_fly [_Flyout("Electrical Receptacles", ICON5986, ICON5986, _OtherIcon, DPM.TB_ELECTRICAL_RECEPTACLES)]
ID_elec_recpt_fly [_Flyout("Electrical Receptacles", ICON5986, ICON5986, _OtherIcon, DPM.TB_ELECTRICAL_RECEPTACLES)]
               [--]
ID_general_fly [_Flyout("General", ICON1721, ICON1721, _OtherIcon, DPM.GENERAL)]
ID_general_fly [_Flyout("General", ICON1721, ICON1721, _OtherIcon, DPM.GENERAL)]

**TELECOMMUNICATIONS
**TB_TELECOMMUNICATIONS
ID_telco_0     [_Toolbar("Telecommunications", _Top, _Hide, 0, 0, 1)]
ID_bollard    [_Button("Bollard", "bollard", "bollard")]^C^C^P(setq INS_NAME "bollard2" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_battery     [_Button("Battery String", "battery", "battery")]^C^C^P(setq INS_NAME "battery" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_battery_clear [_Button("Battery Clearance", "battery_clear", "battery_clear")]^C^C^P(setq INS_NAME "battery_clear" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
               [--]
ID_cond_3fan_lee_temp [_Button("3 Fan Condenser w/ Lee-Temp", "cond_3fan_lee_temp", "cond_3fan_lee_temp")]^C^C^P(setq INS_NAME "cond_3fan_lee_temp" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_cond_3fan   [_Button("Three Fan Condenser", "cond_3fan_lee_temp", "cond_3fan_lee_temp")]^C^C^P(setq INS_NAME "cond_3fan" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_cond_2fan_lee_temp [_Button("2 Fan Condenser w/ Lee-Temp", "cond_2fan_lee_temp", "cond_2fan_lee_temp")]^C^C^P(setq INS_NAME "cond_2fan_lee_temp" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_cond_2fan   [_Button("Two Fan Condenser", "cond_2fan", "cond_2fan")]^C^C^P(setq INS_NAME "cond_2fan" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_cond_1fan   [_Button("One Fan Condensor", "cond_1fan", "cond_1fan")]^C^C^P(setq INS_NAME "cond_1fan" INS_SCALE 1 ROT_ANG 0)(princ);ADV-INSERT;^P
ID_ground      [_Button("Ground Type 1", "ground_1", "ground_1")]^C^C^P(setq INS_NAME "ground_1" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_ground_2    [_Button("Ground Type 2", "ground_2", "ground_2")]^C^C^P(setq INS_NAME "ground_2" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
               [--]
ID_liebert_sw  [_Button("Switch Room Liebert", "liebert_sw", "liebert_sw")]^C^C^P(setq INS_NAME "liebert_sw" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_liebert_controls_1 [_Button("Liebert Controls - Switch Room", "liebert_controls_1", "liebert_controls_1")]textblocks;liebert_controls_1;1;
ID_liebert_sw_clear [_Button("Switch Room Liebert Clearance", "liebert_sw_clear", "liebert_sw_clear")]^C^C^P(setq INS_NAME "liebert_sw_clear" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_liebert_sw_2duct [_Button("Switch Room Liebert 2 Ducts", "liebert_sw_2duct", "liebert_sw_2duct")]^C^C^P(setq INS_NAME "liebert_sw_2duct" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
               [--]
ID_liebert_bat [_Button("Battery Room Liebert", "liebert_bat", "liebert_bat")]^C^C^P(setq INS_NAME "liebert_bat" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_liebert_controls_2 [_Button("Liebert Controls - Battery Room", "liebert_controls_2", "liebert_controls_2")]textblocks;liebert_controls_2;2;
ID_liebert_bat_clear [_Button("Battery Room Liebert Clearance", "liebert_bat_clear", "liebert_bat_clear")]^C^C^P(setq INS_NAME "liebert_bat_clear" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
               [--]
ID_inverter    [_Button("Inverter", "inverter", "inverter")]^C^C^P(setq INS_NAME "inverter" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_rectifier   [_Button("Rectifier", "rectifier", "rectifier")]^C^C^P(setq INS_NAME "rectifier" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_mdf         [_Button("MDF", "mdf", "mdf")]^C^C^P(setq INS_NAME "mdf" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_auto_trans_switch [_Button("Automatic Transfer Switch", "auto_trans_switch", "auto_trans_switch")]^C^C^P(setq INS_NAME "auto_trans_switch" INS_SCALE 1 ROT_ANG "rotate")(princ);ADV-INSERT;^P
               [--]
ID_fm200       [_Button("FM-200", "fm200", "fm200")]^C^C^P(setq INS_NAME "fm200" INS_SCALE 1 ROT_ANG 0)(princ);ADV-INSERT;^P
               [--]
ID_panel1_tel  [_Button("Receptacle Panel", "panel", "panel")]^C^C^P(setq INS_NAME "panel1_tel" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_panel2_tel  [_Button("Lighting Panel", "panel2", "panel2")]^C^C^P(setq INS_NAME "panel2_tel" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_panel3_tel  [_Button("Other Panel", "panel3", "panel3")]^C^C^P(setq INS_NAME "panel3_tel" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P

**ELECTRICAL_ONE_LINE
**TB_ELECTRICAL_ONE_LINE
ID_Electrical_One_Line_0 [_Toolbar("Electrical One Line", _Floating, _Hide, 167, 250, 1)]
ID_breaker     [_Button("Breaker", "breaker", "breaker")]^C^C^P(setq INS_NAME "breaker" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_elec_equip  [_Button("Electrical Equiment / Panel", "elec_equip", "elec_equip")]^C^C^P(setq INS_NAME "elec_equip" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_fuse        [_Button("Fuse", "fuse", "fuse")]^C^C^P(setq INS_NAME "fuse" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_switch      [_Button("Switch", "switch", "switch")]^C^C^P(setq INS_NAME "switch_dia" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_equip_panel_mcb [_Button("Main Circuit Breaker", "equip_panel_mcb", "equip_panel_mcb")]^C^C^P(setq INS_NAME "equip_panel_mcb" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_cir_breaker [_Button("Equipment Panel Breaker", "cir_breaker", "cir_breaker")]^C^C^P(setq INS_NAME "cir_breaker" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_transformer [_Button("Transformer", "transformer", "transformer")]^C^C^P(setq INS_NAME "transformer" INS_SCALE "dimscale" ROT_ANG "rotate")(princ);ADV-INSERT;^P
ID_ground      [_Button("Ground", "ground", "ground")]^C^C^P(setq INS_NAME "ground" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_ats_1       [_Button("Automatic Transfer Switch", "ats_1", "ats_1")]^C^C^P(setq INS_NAME "ats_1" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_ats_2       [_Button("Automatic Transfer Switch", "ats_2", "ats_2")]^C^C^P(setq INS_NAME "ats_2" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_meter_1     [_Button("Meter", "meter_1", "meter_1")]^C^C^P(setq INS_NAME "meter_1" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_generator   [_Button("Generator", "generator", "generator")]^C^C^P(setq INS_NAME "generator" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P
ID_disc_one_line [_Button("Disconnect Switch - One Line", "disc_one_line", "disc_one_line")]^C^C^P(setq INS_NAME "disc_one_line" INS_SCALE "dimscale" ROT_ANG 0)(princ);ADV-INSERT;^P


***ACCELERATORS
ID_Hyperlink   [CONTROL+TOOLBAR+"K"]
[CONTROL+"Q"]^C^CBGTOGGLE 
[CONTROL+"V"]^C^CPASTEBLOCK 

***HELPSTRINGS
ID_SPRINKLER_SIDEWALL [Block name:  sprinkler_sidewall]
ID_CLEAN_OUT_FLOOR [Block name:  clean_out_floor]
ID_ROOF_SUMP   [Block name:  roof_sump]
ID_GENERAL_OFF [Turn general toolbar off]
ID_LAYATO      [Set auto layer for ddleutils: layato]
ID_CHANGE8X11  [Insert and setup a 8-1/2 x 11 change title block:  change8x11]
ID_EFC         [Creates flexable curve duct w/o a length limit:  efc]
ID_DLAYER      [Deletes everything on a layer within a selected window:  dlayer]
ID_ZEROZ       [Moves objects to a z elevation of zero:  zeroz]
ID_SPRINKLER_HEAD [Block name:  sprinkler_head]
ID_SMOKE_DETECTOR_2 [Block name:  smoke_detector_2]
ID_STRAIGHT_CONNECT [Block name:  straight_connect]
ID_CIRCLE_TAG  [Block name:  circle_tag]
ID_DUALSWITCH  [Block name:  dualswitch]
ID_DOOR_BELL   [Block name:  door_bell]
ID_TAMPER_SWITCH [Block name:  tamper_switch]
ID_RECTDUCTCONNA [Block name:  rectductconna]
ID_ELBOW_DOWN  [Block name:  elbow_down]
ID_2X4NL       [Block name:  2x4nl]
ID_UNIT_HEATER [Block name:  unit_heater]
ID_TEE_CONNECT [Block name:  tee_connect]
ID_PANEL2_TEL  [Block name:  panel2_tel]
ID_EQUIP_PANEL_MCB [Block name:  equip_panel_mcb]
ID_FLOW_SWITCH_MECH [Block name:  flow_switch_mech]
ID_FUNNEL_FLOOR_DRAIN_ELEV [Block name:  funnel_floor_drain_elev]
ID_ELEC_AUX_OFF [Turn electrical auxiliary toolbar off]
ID_ELEC_LGHT_OFF [Turn electrical lighting toolbar off]
ID_PS          [Switch to paper space and adjust the linetype scale:  ps]
ID_ELLIP_LEADER [Creates an elliptical leader line:  ell]
ID_RPNENT      [Remove an entity from a block:  rip-nent]
ID_1X4LIGHT    [Block name:  1x4light]
ID_TELEDATA    [Block name:  teledata]
ID_TAG_ID_2    [Block name:  tag_id]
ID_EXLIGHT2    [Block name:  exlight2]
ID_1X4STRIPFIXTURE_NL [Block name:  1x4stripfixture_nl]
ID_FIREALARMCP [Block name:  firealarmcp]
ID_TEE         [Block name:  tee]
ID_ELEC_RECPT_FLY [Electrical Receptacles Flyout]
ID_DPMTEXT     [Converts single line text into DPM standard:  dpmtext]
ID_24X24RETURN [Block name:  24x24return]
ID_INVERTER    [Block name:  inverter]
ID_FLOOR_DRAIN_ELEV [Block name:  floor_drain_elev]
ID_MECH_PLMB_ON [Turn mechnical plumbing toolbar on]
ID_TELCO_ON    [Turn telecommunications toolbar on]
ID_TELEPHONE_AFC [Block name:  telephone_afc]
ID_ZOOM_EXTENTS [Zoom extents:  ze]
ID_ROAM        [Initializes/Updates a roaming A2K profile on the network:  roam]
ID_NENTBLKC    [Set the color of an entity in a block to bylayer:  set-nent-color-bylayer]
ID_WALL_MNT_LIGHT [Block name:  wall_mnt_light]
ID_N_CALL_LIGHT_WALL [Block name:  n_call_light_wall]
ID_DUSCTSMOKEDETECT [Block name:  ductsmokedetect]
ID_RECPT_QUAD  [Block name:  recpt_quad]
ID_ELEC_EQUIP  [Block name:  elec_equip]
ID_RECTDUCTCONN2 [Block name:  rectductconn2]
ID_OGEE        [Block name:  ogee]
ID_THERMOSTAT  [Block name:  thermostat]
ID_24X24RABOOT [Block name:  24x24raboot]
ID_AUTO_GAS_SHUTOFF [Block name:  auto_gas_shutoff]
ID_ELEC_AUX_ON [Turn electrical auxiliary toolbar on]
ID_ALL_ELEC_OFF [Turns off all electrical toolbars]
ID_ALL_MECH_OFF [Turns off all mechanical toolbars]
ID_MECH_PLMB_OFF [Turn mechnical plumbing toolbar off]
ID_IN          [Inserts a block at dimscale:  in]
ID_LINE_MID    [Starts a line at a point which is mid between two selected endpoints:  linemid]
ID_GAP         [Trims an object away from another at an inputted distance:  gap]
ID_BLKSC       [Scales blocks at the insertion point:  blockscale]
ID_KEYED_NOTE_LEAD [Block name:  keyed_note]
ID_1X8NL       [Block name:  1x8nl]
ID_ALARM       [Block name:  alarm]
ID_PANEL       [Block name:  panel]
ID_JBOX2       [Block name:  jbox2]
ID_FIXTURE_TAG [Block name:  fixture_tag]
ID_ROOF_SUPPLY [Block name:  roof_supply]
ID_SWINGING_CHECK_VALVE [Block name:  swinging_check_valve]
ID_CIR_BREAKER [Block name:  cir_breaker]
ID_ELEC_HC_ON  [Turn electrical health care on]
ID_ELEC_PWR_OFF [Turn electrical power toolbar off]
ID_TI          [Block name:  tag_id]
ID_ZOOM_OUT    [Zoom out:  -]
ID_MS          [Switch to model space and adjust the linetype scale:  ms]
ID_FL          [Creates flexable linear duct w/ a 5' limit:  fl]
ID_HOME_RUN    [Creates a home run for an electrical circuit:  all]
ID_LEAD_UTILS  [Controls the behavior of leaders and xtext_layer commands:  ddleutils]
ID_ABLKC       [Set a single block entities color to bylayer:  set-block-color-bylayer]
ID_EX_LIGHT_ARROW [Block name:  ex_light_arrow]
ID_SEC_NOTE    [Block name:  sec_note]
ID_RELOAD_TB   [Reload the x_tb x-reference]
ID_RECPT_BOX   [Block name:  recpt_box]
ID_RECPT_208   [Block name:  recpt_208]
ID_SWITCH_DIA  [Block name:  switch_dia]
ID_EXLIGHT     [Block name:  exlight]
ID_RECPT       [Block name:  recpt]
ID_TIMER       [Block name:  timer]
ID_12X12SUPPLY [Block name:  12x12supply]
ID_GENERAL_FLY [General Flyout]
ID_PLUG_VALVE  [Block name:  plug_valve]
ID_SIAMESE_CONN_WALL [Block name:  siamese_conn_wall]
ID_2_WAY_CONTROL_VALVE [Block name:  two way control valve]
ID_ELEC_FLY_ON [Turn electrical flyout toolbar on]
ID_ELEC_FP_OFF [Turn electrical fire protection toolbar off]
ID_TELEDATA_AFC [Block name:  teledata_afc]
ID_ELEC_AUX_FLY [Electrical Auxiliary Flyout]
ID_ANGLE       [Finds the angle between two points and a vertex:  angle]
ID_ALLBLKC     [Sets ALL block entities colors to bylayer for a drawing:  all-blocks-color-bylayer]
ID_EX_LIGHT_ARROW_2 [Block name:  ex_light_arrow_2]
ID_6INX4LIGHT  [Block name:  6inx4light]
ID_DATA        [Block name:  data]
ID_MOTOR       [Block name:  motor]
ID_ELEC_LGHT_FLY [Electrical Lighting Flyout]
ID_FLEX_CONN   [Block name:  flex_conn]
ID_LIEBERT_SW  [Block name:  liebert_sw]
ID_SIAMESE_CONN_YARD [Block name:  siamese_conn_yard]
ID_LIEBERT_SW_CLEAR [Block name:  liebert_sw_clear]
ID_ELEC_FP_ON  [Turn electrical fire protection toolbar on]
ID_GENERAL_ON  [Turn general toolbar on]
ID_HSSD        [Block name:  hssd]
ID_ROOF_EXHAUST [Block name:  roof_exhaust]
ID_EQT         [Block name:  eqt]
ID_ZOOM_LIM    [Zoom limits:  zl]
ID_RECPT2      [Block name:  recpt2]
ID_FIRE_DAMPER_VER [Block name:  fire_damper_ver]
ID_LIGHT       [Block name:  light]
ID_ANGLE_VALVE [Block name:  angle_valve]
ID_BALL_VALVE  [Block name:  ball_valve]
ID_CIRC_PUMP   [Block name:  circ_pump]
ID_CENT_FAN    [Block name:  cent_fan]
ID_ATS_1       [Block name:  ats_1]
ID_SMOKE_DAMPER_E [Block name:  smoke_damper_e]
ID_SIDE_DIFFUSER_A [Block name:  side_diffuser_a]
ID_ELEC_HC_OFF [Turn electrical health care off]
ID_MECH_HVAC_ON [Turn mechnical HVAC toolbar on]
ID_CHECK_VALVE [Block name:  check_valve]
ID_LAYDTEXT    [Dtext controlled by layer settings in ddleutils:  dtext_layer]
ID_TRG         [Trims multiple lines away from a cutting line at an inputted distance:  trimp]
ID_BR_AT_INT   [Breaks an object at an intersection:  ba]
ID_STROBE      [Block name:  strobe]
ID_PANEL2      [Block name:  panel2]
ID_2X4LIGHT    [Block name:  2x4light]
ID_FLOW_ARROW  [Block name:  flow_arrow]
ID_GATE_VALVE  [Block name:  gate_valve]
ID_BATTERY_CLEAR [Block name:  battery_clear]
ID_ATS_2       [Block name:  ats_2]
ID_MANHOLE     [Block name:  manhole]
ID_SIDE_DIFFUSER_B [Block name:  side_diffuser_b]
ID_MECH_HVAC_OFF [Turn mechnical HVAC toolbar off]
ID_HYDROGEN_DETECT [Block name:  hydrogen_detect]
ID_WALL_SCONCE [Block name:  wall_sconce]
ID_DISCONNECT2 [Block name:  disconnect2]
ID_INTELCONTMOD [Block name:  intelcontmod]
ID_ZOOM_ALL    [Zoom all:  za]
ID_SPECS       [Import ASC files created from Speclink RTF files into AutoCAD:  specs]
ID_ELBOW_CONNECT [Block name:  elbow_connect]
ID_DOWN_LIGHT  [Block name:  down_light]
ID_RECPT_AFC   [Block name:  recpt_afc]
ID_SPININA     [Block name:  spinina]
ID_FIRE_ALARM_STATION [Block name:  fire_alarm_station]
ID_METER       [Block name:  meter]
ID_ELEC_PWR_FLY [Electrical Power Flyout]
ID_BUTTERFLY_VALVE [Block name:  butterfly_valve]
ID_RECTIFIER   [Block name:  rectifier]
ID_ZOOM_PS     [Zoom Plot Scale:  zx]
ID_FIRE_DAMPER_HOR_E [Block name:  fire_damper_hor_e]
ID_ELEC_FP_FLY [Electrical Fire Protection Flyout]
ID_DISCONNECT3 [Block name:  disconnect3]
ID_SMOKE_DAMPER [Block name:  smoke_damper]
ID_EFL         [Creates flexable linear duct w/o a length limit:  efl]
ID_COPY_M      [Copy command with multiple issued:  copy_mult]
ID_BR_BET_INTS [Breaks an object between two intersections:  bz]
ID_SWITCH      [Block name:  switch]
ID_BACK_FLOW_PREV [Block name:  back_flow_prev]
ID_2X2LIGHT    [Block name:  2x2light]
ID_DEMO_NOTE   [Block name:  demo_note]
ID_1X4STRIPFIXTURE [Block name:  1x4stripfixture]
ID_DUCT_TRANS  [Block name:  duct_trans]
ID_LIEBERT_BAT_CLEAR [Block name:  liebert_bat_clear]
ID_MAINLTOFF   [Remove ltscale maintenance when switching between layouts and model space:  remove-maintain-ltscale]
ID_CLEAN_OUT_INLINE [Block name:  clean_out_inline]
ID_FLOW_SWITCH [Block name:  flow_switch]
ID_VOLUMEDAMPER [Block name:  volumedamper]
ID_CEILING_FAN [Block name:  ceiling_fan]
ID_ZOOM_IN     [Zoom in:  *]
ID_DDXRMOD     [Modify Multiple X-references at once:  ddxrmod]
ID_CLEAN       [Issues a purge all command:  clean]
ID_ARC_LEADER  [Creates an arc leader:  al]
ID_EX_LIGHT_HATCH [Block name:  ex_light_fill]
ID_HSSD_CONT_UNIT [Block name:  hssd_cont_unit]
ID_KEYED_NOTE_ELLIP [Block name:  keyed_note]
ID_AIR_CONN    [Block name:  hose_bibb]
ID_CLEAN_OUT   [Block name:  clean_out]
ID_LIEBERT_BAT [Block name:  liebert_bat]
ID_FUSE        [Block name:  fuse]
ID_LIEBERT_CONTROLS_1 [Block name:  liebert_controls_1]
ID_METER_1     [Block name:  meter_1]
ID_ALL_ELEC_ON [Turns on all electrical toolbars]
ID_ELEC_HC_FLY [Electrical Health Care Flyout]
ID_RECTDUCTCONN [Block name:  rectductconn]
ID_FCHAMFER    [Chamfers with a 0 distance:  fchamfer]
ID_FS          [Creates flexable S duct w/ a 5' limit:  fs]
ID_CONN_TO_EXIST [Block name:  conn_to_exist]
ID_SITE_LIGHT  [Block name:  sitelight]
ID_TELEPHONE   [Block name:  telephone]
ID_GLOBE_VALVE [Block name:  globe_valve]
ID_XCREWANDYOKEVALVE [Block name:  screwandyokevalve]
ID_BGTOGGLE    [Toggles the background color:  bgtoggle (^Q)]
ID_SMOKE_FIRE_DAMPER_E [Block name:  smoke_fire_damper_e]
ID_FLOOR_DRAIN [Block name:  floor_drain]
ID_GROUND_ROD  [Block name:  ground_rod]
ID_AUTO_TRANS_SWITCH [Block name:  auto_trans_switch]
ID_BOLLARD    [Block name:  bollard2]
ID_LIEBERT     [Block name:  liebert_sw]
ID_ELEC_RECPT_ON [Turn electrical receptacles toolbar on]
ID_FC          [Creates flexable curve duct w/ a 5' limit:  fc]
ID_UNMIRR      [Unmirror lines and blocks:  unmirror]
ID_INSTALL     [Installs/Updates an A2K profile on a computer:  dpm_install]
ID_N_CALL_LIGHT_CEIL [Block name:  n_call_light_ceil]
ID_RECTDUCTCONN2A [Block name:  rectductconn2a]
ID_SANN_CONN   [Block name:  san_conn]
ID_COND_3FAN   [Block name:  cond_3fan]
ID_CATCH_BASIN [Block name:  catch_basin]
ID_BF_MEASURING_DEVICE [Block name:  bf_measuring_device]
ID_TRANSFORMER [Block name:  transformer]
ID_GROUND      [Block name:  ground_1]
ID_ADDPSTYLES  [Add plot styles to entities that are not color bylayer:  addpstyles]
ID_MDF         [Block name:  mdf]
ID_RETURN_S_ARO [Block name:  return_s_aro]
ID_LIEBERT_SW_2DUCT [Block name:  liebert_sw_2duct]
ID_ELEC_PWR_ON [Turn electrical power toolbar on]
ID_TRACK2FT    [Block name:  track2ft]
ID_TV_OUTLET   [Block name:  tv]
ID_DISCONNECT  [Block name:  disconnect]
ID_BELL        [Block name:  bell]
ID_POWER_PANEL [Block name:  power_panel]
ID_ZOOM_PREV   [Zoom previous:  zz]
ID_TOMTEXT     [Converts single line text into mtext:  tomtext]
ID_SETUP       [Sets up a drawing using DPM standards:  setup]
ID_DEMO        [Creates a demo hatch pattern by selecting a rectangle:  demo]
ID_SMOKE_FIRE_DAMPER [Block name:  smoke_fire_damper]
ID_SPININ      [Block name:  spinin]
ID_EX_FAN      [Block name:  ex_fan]
ID_GROUND_2    [Block name:  ground_2]
ID_PIPE_GUIDE  [Block name:  pipe_guide]
ID_SPRING_CHECK_VALVE [Block name:  spring_check_valve]
ID_COND_2FAN   [Block name:  cond_2fan]
ID_DISC_ONE_LINE [Block name:  disc_one_line]
ID_USERBUTTON_1 [Balancing and flow measuring device]
ID_MAINLTON    [Initiate ltscale maintenance when switching between layouts and model space:  init-maintain-ltscale]
ID_BREAKER     [Block name:  breaker]
ID_ELEC_RECPT_OFF [Turn electrical receptacles toolbar off]
ID_DATA_AFC    [Block name:  data_afc]
ID_1X8LIGHT    [Block name:  1x8light]
ID_PLUGSTRIP   [Block name:  plugstrip]
ID_UNLOAD_TB   [Unload x_tb x-reference]
ID_6INX4NL     [Block name:  6inx4nl]
ID_FLOOR_RECEPT [Block name:  floor_recept]
ID_LOW_EXHAUST [Block name:  low_exhaust]
ID_FIRE_SIGNAL2 [Block name:  fire_signal2]
ID_12X24RABOOT [Block name:  12x24raboot]
ID_TIE         [Block name:  tag_id]
ID_PIPEL       [Label Piping:  pipelabel]
ID_FAST_LEADER [Creates a fast leader line:  ll]
ID_OPEN_SITE_DRAIN [Block name:  open_site_drain]
ID_FM200       [Block name:  fm200]
ID_NAMEPLATELABEL [Block name:  nameplatelabel]
ID_COND_1FAN   [Block name:  cond_1fan]
ID_3_WAY_VALVE_C [Three Way Control Valve]
ID_USERBUTTON_3 [Two Way Control Valve]
ID_FUNNEL_FLOOR_DRAIN [Block name:  funnel_floor_drain]
ID_ELEC_FLY_OFF [Turn electrical flyout toolbar off]
ID_TELCO_OFF   [Turn telecommunications toolbar off]
ID_DOWN_LIGHT_NL [Block name:  down_light_nl]
ID_AIRSAMPLINGPOINT [Block name:  airsamplingpoint]
ID_MOTOR_3P    [Block name:  motor_3p]
ID_TRACK4FT    [Block name:  track4ft]
ID_EMER_LIGHT  [Block name:  emer_light]
ID_PBUTTON     [Block name:  pbutton]
ID_2X2NL       [Block name:  2x2nl]
ID_PIPE_ANCHOR [Block name:  pipe_anchor]
ID_EXP_JOINT   [Block name:  exp_joint]
ID_NUMBER      [Number notes with text or symbol:  number]
ID_PIPE_PITCH  [Block name:  pipe_pitch]
ID_FIRE_HYDRANT [Block name:  fire_hydrant]
ID_USERBUTTON_4 [Three Way Control Valve]
ID_FIRE_DAMPER_VER_E [Block name:  fire_damper_ver_e]
ID_GENERATOR   [Block name:  generator]
ID_CARD_READER [Block name:  card_reader]
ID_ECCRENTRIC_REDUCER [Block name:  eccentric_reducer]
ID_UNION       [Block name:  union]
ID_ELEC_LGHT_ON [Turn electrical lighting toolbar on]
ID_ALL_MECH_ON [Turns on all mechanical toolbars]
ID_SURGE_ARRESTOR [Block name:  surge_arrestor]
ID_DUCT_CAP    [Block name:  duct_cap]
ID_EQUIP_TAG   [Block name:  equip_tag]
ID_SITELIGHTA  [Block name:  sitelighta]
ID_HEAT_DETECTOR [Block name:  heat_detector]
ID_QUADRECPT   [Block name:  recpt_quad_afc]
ID_KEYED_NOTE_NONE [Block name:  keyed_note]
ID_FIRE_DAMPER_HOR [Block name:  fire_damper_hor]
ID_VENT        [Block name:  elbow_up]
ID_1X4NL       [Block name:  1x4nl]
ID_24X24SUPPLY [Block name:  24x24supply]
ID_FIRE_SIGNAL [Block name:  fire_signal]
ID_CAP         [Block name:  cap]
ID_LAYMTEXT    [Mtext controlled by layer settings in ddleutils: mtext_layer]
ID_GLUE        [Glues two parallel colinear lines into one:  glue ]
ID_EFS         [Creates flexable S duct w/o a length limit:  efs]
ID_NEEDLE_VALVE [Block name:  needle_valve]
ID_PANEL1_TEL  [Block name:  panel1_tel]

//
//      End of AutoCAD menu file - C:\Custom Program Files\AutoCAD\Support\dpm.mns
//
